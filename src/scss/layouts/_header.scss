// All the layouts for the necessary elements of the web application
// are all in this file. These include elements such as overlays,
// navigation bars, and others.
//
// Written by Ryuu Mitsuki.
//
// Copyright (c) 2023 CV. DR2E.
// Licensed under MIT License.
//

@use '../base/global';
@use '../base/mixin';
@use '../base/reset';
@use '../components/navbar-base';

/// Configures the overlay element for use in the navigation bar.
///
/// This mixin sets up the overlay element with basic styles and transition effects.
/// It provides configurations for both the default state and the 'active' state
/// when the overlay is visible. The overlay is used to create a semi-transparent
/// background covering the entire viewport.
///
/// @require {variable} trans-overlay
/// @require {variable} bg-overlay
/// @require {variable} navfixed-z
/// @require {mixin} mtransition-all
///
/// @output  Configures the layout for the overlay element.
///
/// @group   layouts
/// @author  Ryuu Mitsuki `<github@mitsuki31>`
/// @since   0.1.0
///
@mixin overlay-layout {
    top: 0;
    left: 0;
    width: 0;      // Initial width (hidden)
    height: 100%;  // Fullscreen height
    position: fixed;
    background: global.$bg-overlay;
    z-index: 0;

    // Configure the transition, this will also include the vendor-prefixed versions
    @include mixin.mtransition-all(global.$trans-overlay);
    
    // Settings for the overlay element when it has 'active' class, i.e. opened.
    &.active {
        width: 100%;
        @include mixin.mtransition(width, 0.20, ease-out);
    }
}

/// Configures the header layout for the website, providing styles for the title,
/// description, and overall appearance.
///
/// This mixin defines the layout and styles for the header section of the website.
/// It includes settings for positioning, colors, font sizes, transitions, and box shadow.
/// The header layout is designed to be responsive, adjusting several aspects for larger devices.
///
/// @require {variable} clr-title
/// @require {variable} clr-container
/// @require {variable} fixed-z
/// @require {variable} navheight
/// @require {variable} ft-bold-weight
/// @require {variable} ft-big-size
/// @require {variable} ft-big-size-720
/// @require {variable} ft-medium-size
/// @require {variable} ft-medium-size-720
/// @require {variable} trans-fontsize
/// @require {mixin} mbox-shadow
/// @require {mixin} mtransition-all
///
/// @output  Configures the layout for the header element.
///
/// @group   layouts
/// @author  Ryuu Mitsuki `<github@mitsuki31>`
/// @since   0.1.0
///
@mixin header-layout {
    z-index: 0;
    justify-content: space-between;
    background-color: global.$clr-container;
    margin-bottom: 10px;
    margin-top: 53px;  // Prevent conflicting with navigation bar
    padding: 0.1px;
    
    // Setting the box shadow using predefined helper mixin
    @include mixin.mbox-shadow(global.$shadow-container);
    
    // Settings for the header title element
    .header-title {
        color: global.$clr-title;
        font-size: global.$ft-big-size + 0.7rem;
        text-align: center;
        padding: 0 25px;
        
        @include mixin.mtransition-all(global.$trans-fontsize);
    }
    
    // Settings for the header description
    .header-description {
        font-size: global.$ft-medium-size;
        @include mixin.mtransition-all(global.$trans-fontsize);
    }
    
    // Settings for larger devices
    @media screen and (min-width: 768px) {
        margin-top: 53px;
        
        .header-title {
            font-size: global.$ft-big-size-720;
        }
        
        .header-description {
            font-size: global.$ft-medium-size-720;
        }
    }
}

/// Configures the layout for the navigation bar.
///
/// This mixin defines the layout properties for the navigation bar, including
/// padding at the bottom and the background color.
///
/// @require {variable} navheight
/// @require {variable} navbgcolor
///
/// @output  Configures the layout for the navigation bar.
///
/// @group   layouts
/// @author  Ryuu Mitsuki `<github@mitsuki31>`
/// @since   0.1.0
///
@mixin navbar-layout {
    position: fixed;
    top: 0;  // Keep on the top
    padding: 27.2px 100vw;
    background-color: navbar-base.$navbgcolor;
    z-index: navbar-base.$navfixed-z;
}

/// Configures the layout for the navigation bar logo.
///
/// This mixin sets up the logo's position, dimensions, and transformation effects.
/// It ensures that the logo remains fixed on the page and provides specific
/// styling for smooth transitions.
///
/// @require {variable} navlogo-size
/// @require {variable} navlogo-top
/// @require {variable} navlogo-right
/// @require {variable} navlogo-trans
/// @require {mixin} mtransform
/// @require {mixin} mtransition-all
///
/// @output  Configures the layout for the navigation bar logo.
///
/// @group   layouts
/// @author  Ryuu Mitsuki `<github@mitsuki31>`
/// @since   0.1.0
///
@mixin navbar-logo-layout {
    position: fixed;
    width: navbar-base.$navlogo-size;
    height: navbar-base.$navlogo-size;
    top: navbar-base.$navlogo-top;
    right: navbar-base.$navlogo-right;
    pointer-events: none;  // Prevent from being clicked
    
    @include mixin.mtransform(translateY(37px));
    @include mixin.mtransition-all(navbar-base.$navlogo-trans);
    
    @media screen and (min-width: 768px) {
        width: navbar-base.$navlogo-size + 10px;
        height: navbar-base.$navlogo-size + 10px;
    }
}

/// Configures the layout and animations for the navigation bar button.
///
/// This mixin defines the appearance and behavior of the navigation bar button,
/// including its position, dimensions, transformations, and transition effects.
/// It handles both the default state and the active state when the button is clicked.
///
/// When active, the button's width decreases, and its individual bars transform to create
/// a visually appealing menu icon effect. The transition delays are carefully managed
/// to create smooth animations during interaction.
///
/// @require {variable} navbtn-top
/// @require {variable} navbtn-left
/// @require {variable} navbtn-width
/// @require {variable} navbtn-margin
/// @require {variable} navbtn-n-height
/// @require {variable} navcolor
/// @require {variable} navbtn-transform-a
/// @require {variable} navbtn-transform-b
/// @require {variable} navtrans-button
/// @require {mixin} mtransition-all
/// @require {mixin} re-image
///
/// @output  Configures the layout and animations for the navigation bar button.
///
/// @group   layouts
/// @author  Ryuu Mitsuki `<github@mitsuki31>`
/// @since   0.1.0
///
@mixin navbar-button-layout {
    // Outer navigation button
    .nav-btn-out {
        $width-size: 35px;
        $height-size: 29px;
        $size-trans: 0.35s ease-in-out;
        
        // Button size
        width: $width-size;
        height: $height-size;
        
        // Button position
        position: fixed;
        top: navbar-base.$navbtn-top + 2.5px;
        left: navbar-base.$navbtn-left;
        
        // Other attributes
        cursor: pointer;
        border-radius: 5px;
        z-index: navbar-base.$navfixed-z + 2;
        
        @include mixin.mtransition-all(all $size-trans);
        
        // Inner navigation button
        .nav-btn-in {
            position: absolute;
            display: block;
            width: navbar-base.$navbtn-width;
            
            appearance: none;
            background: none;
            @include reset.re-image;  // For reset border and outline to none
            
            @include mixin.mtransition-all(width $size-trans);
            
            .bar, &::before, &::after {
                content: '';
                display: block;
                width: 100%;
                height: navbar-base.$navbtn-n-height;
                background-color: navbar-base.$navcolor;
                margin: navbar-base.$navbtn-margin;
                
                @include mixin.mtransition-all(navbar-base.$navtrans-button);
            }
            
            .bar {
                // Deactivate the click event on 'bar' class, to prevent
                // being clicked and cause the button unable to be clicked.
                pointer-events: none;
                
                transition-delay: 0.2s;
                -webkit-transition-delay: 0.2s;
                -moz-transition-delay: 0.2s;
                -o-transition-delay: 0.2s;
            }
        }
        
        // Settings when it has 'active' class
        &.active {
            $reduction-size: 2.75px;
            
            // Reduce size of outer element
            width: $width-size - $reduction-size;
            height: $height-size - 1.2px;
            padding: 0;
            
            .nav-btn-in {
                &::before {
                    transform: navbar-base.$navbtn-transform-a;
                }
                
                &::after {
                    transform: navbar-base.$navbtn-transform-b;
                }
                
                width: navbar-base.$navbtn-width - $reduction-size;
                
                // Reset all the transition delay when active
                .bar {
                    width: 0;
                    
                    transition-delay: 0s;
                    -webkit-transition-delay: 0s;
                    -moz-transition-delay: 0s;
                    -o-transition-delay: 0s;
                }
            }
        }
    }
}


@mixin navbar-button-layout-v2 {
    .nav-btn-out {
        position: fixed;
        z-index: navbar-base.$navfixed-z + 1;
        top: navbar-base.$navbtn-top + 4.5px;
        left: navbar-base.$navbtn-left;
        
        // Sizes
        width: 27px;
        height: 25.5px;
    }
    
    .bar {
        display: flex;
        border: none;
        outline: none;
        background-color: inherit;
        width: 100%;
        height: 100%;
        
        // Button size and alignment
        font-size: 30px;
        justify-content: center;
        align-items: center;
        text-align: center;
        
        // Color
        color: navbar-base.$navcolor;
    }
}


/// Configures the layout setting for the navigation bar menu.
///
/// When the navigation menu in non-active mode (_closed_), it will not
/// appears (_i.e. hidden_), otherwise when it is active (_opened_) the element
/// will appears with a slide animation from left to the right. The width size
/// of navigation menu is depends to the value of [`$navwidth`](#navbar-variable-navwidth).
///
/// @require {variable} navbgcolor
/// @require {variable} navfixed-z
/// @require {variable} navtrans
/// @require {variable} navwidth
/// @require {mixin} mtransition
/// @require {mixin} mtransform
///
/// @output  Configures the layout and animations for the navigation bar menu.
///
/// @group   layouts
/// @author  Ryuu Mitsuki `<github@mitsuki31>`
/// @since   0.1.0
///
@mixin navbar-menu-layout {
    &, &::before, &::after {
        top: 0;
        left: 0;
        position: fixed;
        width: 0;  // Initial width (hidden)
        min-height: 100vh;
        background-color: navbar-base.$navbgcolor;
        padding-top: 20px;
        overflow-x: hidden;                // Disable horizontal scroll
        z-index: navbar-base.$navfixed-z;  // Keep on the top
        visibility: hidden;
        
        @include mixin.mtransition(
            $durations: nth(navbar-base.$navtrans, 1),
            $timing: nth(navbar-base.$navtrans, 2)
        );
    }
    
    p.copyright {
        position: fixed;
        bottom: 0;
        margin: 0;
        margin-bottom: 20px;           // Keep away the text from the bottom
        width: navbar-base.$navwidth;  // The width must equals to navbar menu width
        overflow-x: hidden;
        
        // Font settings
        color: navbar-base.$navcolor;
        text-align: center;
        font-size: global.$ft-medium-size - 0.3rem;
        
        @include mixin.mtransform(translateX(-300px));
        @include mixin.mtransition-all(transform 0.3s 0s ease-in);
    }
    
    &.active {
        visibility: visible;
        width: navbar-base.$navwidth;
        
        .menu-contents {
            @include mixin.mtransform(translateX(0px));
        }
        
        p {
            @include mixin.mtransform(translateX(0px));
            @include mixin.mtransition-all(navbar-base.$navtrans-items);
        }
    }
}


/// This mixin configures the layout of navigation bar menu's list.
///
/// The configuration including:
///   - Reset the default properties of `<ul>` element
///   - Add several animations
///   - Resize the logos within `<i>` elements
///
/// The menu contents is stick (and depends) to the navigation bar appearances,
/// it will be hidden when navigation bar is also hidden or closed.
///
/// **Note:**
/// This mixin is used and intended for small devices like mobile phones.
/// For larger devices, refer to the
/// [`navbar-menu-contents-layout-ld`](#layouts-mixin-navbar-menu-contents-layout-ld).
///
/// @require {variable} ft-bold-weight
/// @require {variable} navtrans-items
/// @require {variable} navitems-size
/// @require {variable} navcolor
/// @require {variable} navbgcolor-hover
/// @require {mixin} re-list
/// @require {mixin} mtransform
/// @require {mixin} mtransition-all
///
/// @group   layouts
/// @author  Ryuu Mitsuki `<github@mitsuki31>`
/// @since   0.1.0
///
@mixin navbar-menu-contents-layout {
    $-icon-offset: 15px;
    $-icon-spaces: 10px;
    $-icon-size: 1.5em;
    $-letter-space: 2.55px;
    
    @include reset.re-list;  // Reset list styles
    
    position: fixed;
    padding: 0;
    width: navbar-base.$navwidth;  // Initial width
    display: block;
    margin-top: 1.8rem;
    font-size: navbar-base.$navitems-size - 0.075rem;
    
    @include mixin.mtransform(translateX(-300px));
    @include mixin.mtransition-all(
        navbar-base.$navtrans-items
    );
    
    li {
        display: inherit;
        letter-spacing: $-letter-space;
        text-align: center;
        
        a {
            vertical-align: middle;
            
            & > i {
                font-size: $-icon-size;
                margin-left: $-icon-offset;
                margin-right: $-icon-spaces;
            }
        }
        
        a:not(i),
        &.menu__socials {
            display: flex;
            text-decoration: none;
            font-weight: global.$ft-bold-weight;
            color: navbar-base.$navcolor;
            cursor: pointer;
            padding: 15px 0;
            padding-right: 20px;
        }
        
        &.menu__socials > i {
            font-size: $-icon-size;
            margin-left: $-icon-offset;
            margin-right: $-icon-spaces;
        }
        
        &:hover,
        &:focus,
        a:hover,
        a:focus {
            color: global.$clr-hover;
            background-color: navbar-base.$navbgcolor-hover;
        }
    }
    
    // Settings for dropdown menus
    .dropdown-menu {
        li {
            vertical-align: middle;
            
            i {
                font-size: $-icon-size;
                margin-right: $-icon-spaces;
                margin-left: 35px;
            }
        }
        padding: 0;
        display: none;
        
        // When active i.e. being clicked by user
        &.active {
            display: inherit;
        }
    }
}

/// Configures the layout of navigation menu's list for larger devices only.
///
/// The layout configured by this mixin are different with the layout for small devices,
/// it is because on larger devices the layout of navigation menu contents will no
/// longer sticks to the navigation bar appearances, instead it will be at the top right
/// of the header element and always visible.
///
/// @require {variable} navitems-size
/// @require {variable} navcolor
/// @require {variable} navbgcolor-hover
/// @require {mixin} re-list
/// @require {mixin} re-margin-padding
///
/// @group   layouts
/// @author  Ryuu Mitsuki `<github@mitsuki31>`
/// @since   0.1.0
///
@mixin navbar-menu-contents-layout-ld {
    @include reset.re-list;
    @include reset.re-margin-padding;
    
    overflow: hidden;
    
    li {
        $-icon-spaces: 3.5px;
        $-icon-size: 1.35em;
        $-text-size: navbar-base.$navitems-size + 0.3rem;
        $-letter-space: 2.2px;
        $-items-height: 65.5px;
        
        display: inherit;
        float: right;
        text-align: center;
        width: 180px;
        height: $-items-height;
        
        a {
            & > i {
                vertical-align: middle;
                padding-right: 8px;
                font-size: $-icon-size;
                margin-right: $-icon-spaces;
            }
            
            & > i::before {
                vertical-align: middle;
            }
        }
        
        a:not(i) {
            display: inline-block;
            cursor: pointer;
            height: 100%;
            width: 100%;
            line-height: $-items-height;
            font-weight: global.$ft-bold-weight;
            font-size: $-text-size;
            color: navbar-base.$navcolor;
            text-decoration: none;
            letter-spacing: $-letter-space;
        }
        
        &:hover, &:focus {
            background-color: navbar-base.$navbgcolor-hover;
        }
    }
}

/// Configures the layout of logos for element with a class of `.logo`.
///
/// @require {variable} clr-title
/// @require {variable} ft-big-size
/// @require {variable} ft-big-size-720
/// @require {variable} navlogo-spaces
///
/// @group   layouts
/// @author  Ryuu Mitsuki `<github@mitsuki31>`
/// @since   0.1.0
///
@mixin logo-layout {
    .logo {
        margin: 0 navbar-base.$navlogo-spaces;
        
        &:focus,
        &:hover {
            color: global.$clr-hover;
        }
        
        @media screen and (min-width: 768px) {
            margin: 0 navbar-base.$navlogo-spaces + 5px;
            cursor: none;
        }
    }
    
    .logo i {
        position: relative;
        font-size: global.$ft-big-size + 0.20rem;
        color: global.$clr-title;
        width: fit-content;
        height: 100%;
    }
    
    img.logo[src='assets/images/icon_ski.png'] {
        position: relative;
        width: 6.25%;
        height: 6.25%;
        cursor: default;       // The cursor acts default
        pointer-events: none;  // but users CANNOT click the image itself
        
        @media screen and (min-width: 768px) {
            // FIXME: readjust these things
            width: 3.85%;
            height: 3.85%;
            margin-right: 4.45px;
        }
    }
}

@mixin toc-head-layout {
    display: block;
    z-index: global.$fixed-z;  // Prevent conflicting with navigation menus
    
    background-color: navbar-base.$navbgcolor;
    @include mixin.mbox-shadow(0 1px 0.4rem rgba(3, 5, 43, 0.34));
    
    padding: 12px 0;
    margin: 20px 30px;
    border-radius: 10px;
    
    h4 {
        letter-spacing: 1.8px;
        color: #eee;
        margin: 0 22px;
        
        & > i {
            font-size: 13.5px;
            margin-right: 5px;
            font-weight: bold;
        }
    }
    
    &.active {
        // Change the bottom margin value to zero (0) when active
        margin-bottom: 0;
        padding-bottom: 27px;
        background-color: navbar-base.$navbgcolor-hover;
    }
}

@mixin toc-layout {
    // Hide the table of contents when not active
    visibility: hidden;
    display: none;
    
    background-color: navbar-base.$navbgcolor;
    @include mixin.mbox-shadow(0 1px 0.4rem rgba(3, 5, 43, 0.34));
    
    padding: 5px 0;
    margin: 0 30px 30px 30px;
    border-radius: 10px;
    
    .toc-list {
        // Styles for each list, recursive to sub-list
        li {
            color: navbar-base.$navcolor;  // Font color
            margin: 7px 17px 7px 0/* keep this zero */;
            padding-left: 2px;
            font-size: 0.8em;  // Size for each list
            cursor: pointer;
            
            &:hover,
            &:focus {
                color: global.$clr-hover;
                
                font-weight: bold;
                text-shadow: 0 1.7px 7.5px global.$clr-hover;
                text-decoration: underline;
            }
        }
        
        ol {
            margin-left: -6%;  // Adjust the left margin
            list-style-type: lower-roman;
        }
    }
    
    &.active {
        visibility: visible;
        display: block;
        margin-top: -17px;
    }
}
